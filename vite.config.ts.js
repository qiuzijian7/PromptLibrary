// vite.config.ts
import { defineConfig } from "vite";
import vue from "@vitejs/plugin-vue2";
import legacy from "@vitejs/plugin-legacy";
import { resolve } from "path";
import progress from "vite-plugin-progress";
import * as process from "process";
import * as dotenv from "dotenv";
dotenv.config();
var config2 = {
  root: "./web",
  base: "/apps/ops/",
  server: {
    port: 12833,
    host: "0.0.0.0"
  },
  worker: {
    format: "es"
  },
  plugins: [vue(), progress()],
  css: {},
  build: {
    assetsInlineLimit: 1024 * 10,
    emptyOutDir: true,
    outDir: resolve("H:\\Workspace_React\\PromptLibrary", "dist"),
    assetsDir: `version/2023-03/`,
    publicDir: resolve("H:\\Workspace_React\\PromptLibrary", "web/public"),
    rollupOptions: {
      input: {
        main: resolve("H:\\Workspace_React\\PromptLibrary", "web/index.html")
      }
    },
    reportCompressedSize: false
  },
  resolve: {},
  define: {
    "process.env.LOCAL_TRANSLATE_HOST": process.env.LOCAL_TRANSLATE_HOST ? `"${process.env.LOCAL_TRANSLATE_HOST}"` : "false"
  }
};
if (process.env.NODE_ENV == "production") {
  config2.plugins.push(legacy({ targets: ["defaults", "not IE 11"] }));
}
var vite_config_default = defineConfig(config2);
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImltcG9ydCB7IGRlZmluZUNvbmZpZyB9IGZyb20gXCJ2aXRlXCJcclxuaW1wb3J0IHZ1ZSBmcm9tIFwiQHZpdGVqcy9wbHVnaW4tdnVlMlwiXHJcbmltcG9ydCBsZWdhY3kgZnJvbSBcIkB2aXRlanMvcGx1Z2luLWxlZ2FjeVwiXHJcbmltcG9ydCBwYXRoIGZyb20gXCJwYXRoXCJcclxuaW1wb3J0IHsgcmVzb2x2ZSB9IGZyb20gXCJwYXRoXCJcclxuaW1wb3J0IHByb2dyZXNzIGZyb20gXCJ2aXRlLXBsdWdpbi1wcm9ncmVzc1wiXHJcbmltcG9ydCAqIGFzIHByb2Nlc3MgZnJvbSBcInByb2Nlc3NcIlxyXG5pbXBvcnQgKiBhcyBkb3RlbnYgZnJvbSBcImRvdGVudlwiXHJcbmRvdGVudi5jb25maWcoKVxyXG5cclxuLy8gaHR0cHM6Ly92aXRlanMuZGV2L2NvbmZpZy9cclxubGV0IGNvbmZpZyA9IHtcclxuICAgIHJvb3Q6IFwiLi93ZWJcIixcclxuICAgIGJhc2U6IFwiL2FwcHMvb3BzL1wiLFxyXG4gICAgc2VydmVyOiB7XHJcbiAgICAgICAgcG9ydDogMTI4MzMsXHJcbiAgICAgICAgaG9zdDogXCIwLjAuMC4wXCIsXHJcbiAgICB9LFxyXG4gICAgd29ya2VyOiB7XHJcbiAgICAgICAgZm9ybWF0OiBcImVzXCIsXHJcbiAgICB9LFxyXG4gICAgcGx1Z2luczogW3Z1ZSgpLCBwcm9ncmVzcygpXSxcclxuICAgIGNzczoge30sXHJcbiAgICBidWlsZDoge1xyXG4gICAgICAgIC8vIG1pbmlmeTogXCJ0ZXJzZXJcIixcclxuICAgICAgICBhc3NldHNJbmxpbmVMaW1pdDogMTAyNCAqIDEwIC8qIDEwa2IgKi8sXHJcbiAgICAgICAgZW1wdHlPdXREaXI6IHRydWUsXHJcbiAgICAgICAgb3V0RGlyOiByZXNvbHZlKFwiSDpcXFxcV29ya3NwYWNlX1JlYWN0XFxcXFByb21wdExpYnJhcnlcIiwgXCJkaXN0XCIpLFxyXG4gICAgICAgIGFzc2V0c0RpcjogYHZlcnNpb24vMjAyMy0wMy9gLFxyXG4gICAgICAgIHB1YmxpY0RpcjogcmVzb2x2ZShcIkg6XFxcXFdvcmtzcGFjZV9SZWFjdFxcXFxQcm9tcHRMaWJyYXJ5XCIsIFwid2ViL3B1YmxpY1wiKSxcclxuICAgICAgICByb2xsdXBPcHRpb25zOiB7XHJcbiAgICAgICAgICAgIGlucHV0OiB7XHJcbiAgICAgICAgICAgICAgICBtYWluOiByZXNvbHZlKFwiSDpcXFxcV29ya3NwYWNlX1JlYWN0XFxcXFByb21wdExpYnJhcnlcIiwgXCJ3ZWIvaW5kZXguaHRtbFwiKSxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlcG9ydENvbXByZXNzZWRTaXplOiBmYWxzZSxcclxuICAgIH0sXHJcbiAgICByZXNvbHZlOiB7fSxcclxuICAgIGRlZmluZToge1xyXG4gICAgICAgIFwicHJvY2Vzcy5lbnYuTE9DQUxfVFJBTlNMQVRFX0hPU1RcIjogcHJvY2Vzcy5lbnYuTE9DQUxfVFJBTlNMQVRFX0hPU1RcclxuICAgICAgICAgICAgPyBgXCIke3Byb2Nlc3MuZW52LkxPQ0FMX1RSQU5TTEFURV9IT1NUfVwiYFxyXG4gICAgICAgICAgICA6IFwiZmFsc2VcIixcclxuICAgIH0sXHJcbn1cclxuLy8gLS0tLS0tLS0tLS0tLSBbdml0ZSBidWlsZF0gLS0tLS0tLS0tLS0tXHJcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PSBcInByb2R1Y3Rpb25cIikge1xyXG4gICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgLy8gY29uZmlnLmJ1aWxkLm1pbmlmeSA9IFwidGVyc2VyXCJcclxuICAgIGNvbmZpZy5wbHVnaW5zLnB1c2gobGVnYWN5KHsgdGFyZ2V0czogW1wiZGVmYXVsdHNcIiwgXCJub3QgSUUgMTFcIl0gfSkpXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKDxhbnk+Y29uZmlnKVxyXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQUEsU0FBUyxvQkFBb0I7QUFDN0IsT0FBTyxTQUFTO0FBQ2hCLE9BQU8sWUFBWTtBQUVuQixTQUFTLGVBQWU7QUFDeEIsT0FBTyxjQUFjO0FBQ3JCLFlBQVksYUFBYTtBQUN6QixZQUFZLFlBQVk7QUFDakIsY0FBTztBQUdkLElBQUlBLFVBQVM7QUFBQSxFQUNULE1BQU07QUFBQSxFQUNOLE1BQU07QUFBQSxFQUNOLFFBQVE7QUFBQSxJQUNKLE1BQU07QUFBQSxJQUNOLE1BQU07QUFBQSxFQUNWO0FBQUEsRUFDQSxRQUFRO0FBQUEsSUFDSixRQUFRO0FBQUEsRUFDWjtBQUFBLEVBQ0EsU0FBUyxDQUFDLElBQUksR0FBRyxTQUFTLENBQUM7QUFBQSxFQUMzQixLQUFLLENBQUM7QUFBQSxFQUNOLE9BQU87QUFBQSxJQUVILG1CQUFtQixPQUFPO0FBQUEsSUFDMUIsYUFBYTtBQUFBLElBQ2IsUUFBUSxRQUFRLHNDQUFzQyxNQUFNO0FBQUEsSUFDNUQsV0FBVztBQUFBLElBQ1gsV0FBVyxRQUFRLHNDQUFzQyxZQUFZO0FBQUEsSUFDckUsZUFBZTtBQUFBLE1BQ1gsT0FBTztBQUFBLFFBQ0gsTUFBTSxRQUFRLHNDQUFzQyxnQkFBZ0I7QUFBQSxNQUN4RTtBQUFBLElBQ0o7QUFBQSxJQUNBLHNCQUFzQjtBQUFBLEVBQzFCO0FBQUEsRUFDQSxTQUFTLENBQUM7QUFBQSxFQUNWLFFBQVE7QUFBQSxJQUNKLG9DQUE0QyxZQUFJLHVCQUMxQyxJQUFZLFlBQUksMEJBQ2hCO0FBQUEsRUFDVjtBQUNKO0FBRUEsSUFBWSxZQUFJLFlBQVksY0FBYztBQUd0QyxFQUFBQSxRQUFPLFFBQVEsS0FBSyxPQUFPLEVBQUUsU0FBUyxDQUFDLFlBQVksV0FBVyxFQUFFLENBQUMsQ0FBQztBQUN0RTtBQUNBLElBQU8sc0JBQVEsYUFBa0JBLE9BQU07IiwKICAibmFtZXMiOiBbImNvbmZpZyJdCn0K
